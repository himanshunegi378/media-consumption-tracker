{"version":3,"sources":["components/navbar/itemDetail.js","components/navbar/searchItem.jsx","components/navbar/searchBar.jsx","components/navbar/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Trakt","require","ItemDetail","props","state","detail","image","trakt","client_id","client_secret","redirect_uri","api_url","useragent","pagination","imdbId","this","id","movies","summary","extended","then","res","console","log","setState","axios","get","data","Poster","Card","body","bg","text","Row","sm","className","src","overview","Component","SearchItem","handleClick","prevState","click","movie","ids","imdb","open","movie_title","title","year_of_release","year","onClick","aria-controls","aria-expanded","Body","Title","Subtitle","Collapse","in","SearchBar","handleSubmit","e","preventDefault","search","type","query","items","map","item","key","handleChange","target","name","value","catch","err","options","onSubmit","onChange","Navbar","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9eb337c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/cjs/Col\";\r\nconst Trakt = require(\"nodeless-trakt\");\r\n\r\nclass ItemDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detail: null,\r\n      image: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let options = {\r\n      client_id:\r\n        \"de8e4e4272e199e59aab0ea0e55768257916214f32d394be62560202728bb365\",\r\n      client_secret:\r\n        \"199c3e15ace3b325f1c03a460a59885bfc5a616f967d1e95f975d75ebabb44df\",\r\n      redirect_uri: null, // defaults to 'urn:ietf:wg:oauth:2.0:oob'\r\n      api_url: null, // defaults to 'https://api.trakt.tv'\r\n      useragent: null, // defaults to 'trakt.tv/<version>'\r\n      pagination: true // defaults to false, global pagination (see below)\r\n    };\r\n    let trakt = new Trakt(options);\r\n    const imdbId = this.props.id;\r\n    trakt.movies.summary({ id: imdbId, extended: \"full\" }).then(res => {\r\n      console.log(res);\r\n      this.setState({ detail: res });\r\n    });\r\n    axios\r\n      .get(`http://www.omdbapi.com/?i=${imdbId}&apikey=c61657ee`)\r\n      .then(res => {\r\n        this.setState({ image: res.data.Poster });\r\n        console.log(res.data.Poster);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.detail);\r\n    return (\r\n      <>\r\n        {this.state.detail !== null ? (\r\n          <Card body bg=\"success \" text=\"white\">\r\n            <Row >\r\n              <Col sm={2}>\r\n            <img className=\"img-fluid h-auto \" src={this.state.image} />\r\n              </Col>\r\n              <Col sm={10}>\r\n                {this.state.detail.overview}\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemDetail;\r\n","import React, { Component, useState } from \"react\";\r\nimport { Card, Collapse } from \"react-bootstrap\";\r\nimport ItemDetail from \"./itemDetail\";\r\n\r\nclass SearchItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      click: false,\r\n      detail: <></>,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleClick = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        click: true,\r\n        detail: <ItemDetail id={this.props.data.movie.ids.imdb} />\r\n      };\r\n    });\r\n    this.setState({ open: !this.state.open });\r\n\r\n  };\r\n  render() {\r\n    const movie_title = this.props.data.movie.title;\r\n    const year_of_release = this.props.data.movie.year;\r\n\r\n    return (\r\n      <>\r\n        <Card\r\n          onClick={() => {\r\n            this.handleClick();\r\n          }}\r\n          aria-controls={this.props.data.movie.ids.imdb}\r\n          aria-expanded={this.state.open}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>{movie_title}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {year_of_release}\r\n            </Card.Subtitle>\r\n          </Card.Body>\r\n        </Card>\r\n        <Collapse in={this.state.open}>\r\n          <div id={this.props.data.movie.ids.imdb}>{this.state.detail}</div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchItem;\r\n","import React, { Component } from \"react\";\r\nimport SearchItem from \"./searchItem\";\r\nimport Trakt from \"nodeless-trakt\";\r\n\r\n\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      items: []\r\n    };\r\n    this.options = {\r\n      client_id:\r\n        \"de8e4e4272e199e59aab0ea0e55768257916214f32d394be62560202728bb365\",\r\n      client_secret:\r\n        \"199c3e15ace3b325f1c03a460a59885bfc5a616f967d1e95f975d75ebabb44df\",\r\n      redirect_uri: null, // defaults to 'urn:ietf:wg:oauth:2.0:oob'\r\n      api_url: null, // defaults to 'https://api.trakt.tv'\r\n      useragent: null, // defaults to 'trakt.tv/<version>'\r\n      pagination: true // defaults to false, global pagination (see below)\r\n    };\r\n    this.trakt = new Trakt(this.options);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.trakt.search\r\n      .text({ type: \"movie\", query: this.state.search })\r\n      .then(res => {\r\n        console.log(res);\r\n        let items;\r\n        items = res.map(item => {\r\n          return <SearchItem key={item.movie.ids.trakt} data={item} />;\r\n        });\r\n\r\n        this.setState({ items: items });\r\n      });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(this.state.search);\r\n\r\n    this.trakt.search\r\n      .text({ type: \"movie\", query: e.target.value })\r\n      .then(res => {\r\n          console.log(res)\r\n        let items;\r\n        items = res.map(item => {\r\n          return (\r\n            <SearchItem\r\n              key={item.movie.ids.trakt}\r\n              data={item}\r\n            />\r\n          );\r\n        });\r\n\r\n        this.setState({ items: items });\r\n      })\r\n        .catch(err=>console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>Search: </label>\r\n          <input\r\n            id=\"search\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={this.state.search}\r\n          />{\" \"}\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n          {this.state.items}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/navbar/navbar\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}